#!/usr/bin/env python2
# encoding: utf-8

"""
Point in Circle.

Challenge Description:

Having coordinates of the center of a circle, it's radius and coordinates of a
point you need to define whether this point is located inside of this circle.

Input sample:

Your program should accept as its first argument a path to a filename. Input
example is the following

Center: (2.12, -3.48); Radius: 17.22; Point: (16.21, -5)
Center: (5.05, -11); Radius: 21.2; Point: (-31, -45)
Center: (-9.86, 1.95); Radius: 47.28; Point: (6.03, -6.42)

All numbers in input are between -100 and 100

Output sample:

Print results in the following way.

true
false
true

"""

import math
import re
import sys

with open(sys.argv[1], 'r') as input:
    test_cases = input.read().strip().splitlines()


def dist_a_to_b(a, b):
    return math.sqrt((a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2)


for test in test_cases:
    center_regex = re.compile('Center: \((\-?\d*.?\d*), (\-?\d*.?\d*)\);')
    radius_regex = re.compile('Radius: (\-?\d*.?\d*);')
    point_regex = re.compile('Point: \((\-?\d*.?\d*), (\-?\d*.?\d*)\)')
    center = [float(i) for i in re.findall(center_regex, test)[0]]
    radius = float((re.findall(radius_regex, test))[0])
    point = [float(i) for i in re.findall(point_regex, test)[0]]
    print str(dist_a_to_b(center, point) <= radius).lower().lower()
