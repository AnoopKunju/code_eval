#!/usr/bin/env python2
# encoding: utf-8

"""
Flavius Josephus.

Challenge Description:

Flavius Josephus was a famous Jewish historian of the first century, at the
time of the destruction of the Second Temple. According to legend, during the
Jewish-Roman war he was trapped in a cave with a group of soldiers surrounded
by Romans. Preferring death to capture, the Jews decided to form a circle and,
proceeding around it, to kill every j'th person remaining until no one was
left. Josephus found the safe spot in the circle and thus stayed alive.  Write
a program that returns a list of n people, numbered from 0 to n-1, in the order
in which they are executed.

Input sample:

Your program should accept as its first argument a path to a filename. Each
line in this file contains two comma separated positive integers n and m, where
n is the number of people and every m'th person will be executed. E.g.

10,3
5,2

Output sample:

Print out the list of n people (space delimited) in the order in which they
will be executed. E.g.

2 5 8 1 6 0 7 4 9 3
1 3 0 4 2

"""

import sys

with open(sys.argv[1], 'r') as input:
    test_cases = input.read().strip().splitlines()

for test in test_cases:
    people, turn = (int(i) for i in test.split(','))
    alive = {i: True for i in xrange(people)}
    dead = []
    idx = 0
    while any(alive.values()):
        for i in sorted(i for i in alive.keys() if alive[i]):
            idx +=1
            if idx == turn:
                dead.append(i)
                alive[i] = False
                idx = 0

    print ' '.join(str(i) for i in dead)
