#!/usr/bin/env python2
# encoding: utf-8

"""
Data Recovery.

Challenge Description:

Your friends decided to make a fun of you. They've installed a script
to your computer which shuffled all of the words within a text. It was
a joke, so they've left hints for each sentence which allow you to
easily rebuild your data. The challenge is to write a program which
reconstructs each sentence out of a set of words, you need to find out
how to use a given hint and print out the original sentences.

Input sample:

Your program should accept as its first argument a path to a
filename. Each line is a test case. Each test case consists of a set
of words and a sequence of numbers separated by a semicolon. The words
within a set and the numbers within a sequence are separated by a
single whitespace. E.g.

2000 and was not However, implemented 1998 it until;9 8 3 4 1 5 7 2
programming first The language;3 2 1
programs Manchester The written ran Mark 1952 1 in Autocode from;6 2 1 7 5 3 11 4 8 9

Output sample:

For each test case print out the reconstructed sentence one per line. E.g.

However, it was not implemented until 1998 and 2000
The first programming language
The Manchester Mark 1 ran programs written in Autocode from 1952

Constraints:

The number of test cases is in range [20, 40].
The words consist of ASCII upper and lower case letters, digits and
punctuation.

"""

import sys

with open(sys.argv[1], 'r') as input:
    test_cases = input.read().strip().splitlines()

for test in test_cases:
    words, key = [i.split() for i in test.split(';')]
    length = len(words)
    key_as_numbers = [int(i) - 1 for i in key]
    last_word_number =  [i for i in xrange(length) if str(i + 1) not in key]
    sentence = dict(zip(key_as_numbers + last_word_number, words))

    print ' '.join(sentence[i] for i in xrange(length))
