#!/usr/bin/env python2
# encoding: utf-8

"""
Query Board.

Challenge Description:

There is a board (matrix). Every cell of the board contains one integer, which
is 0 initially.

The next operations can be applied to the Query Board:
SetRow i x: it means that all values in the cells on row "i" have been changed
to value "x" after this operation.
SetCol j x: it means that all values in the cells on column "j" have been
changed to value "x" after this operation.
QueryRow i: it means that you should output the sum of values on row "i".
QueryCol j: it means that you should output the sum of values on column "j".

The board's dimensions are 256x256
"i" and "j" are integers from 0 to 255
"x" is an integer from 0 to 31

Input sample:

Your program should accept as its first argument a path to a filename. Each
line in this file contains an operation of a query. E.g.

SetCol 32 20
SetRow 15 7
SetRow 16 31
QueryCol 32
SetCol 2 14
QueryRow 10
SetCol 14 0
QueryRow 15
SetRow 10 1
QueryCol 2

Output sample:

For each query, output the answer of the query. E.g.

5118
34
1792
3571

"""

import sys

with open(sys.argv[1], 'r') as input:
    test_cases = input.read().strip().splitlines()


def set_row(matrix, parameters):
    row, value = parameters
    matrix[row] = [value for i in matrix[row]]


def set_col(matrix, parameters):
    col, value = parameters
    for row in matrix:
        row[col] = value


def query_row(matrix, parameters):
    print sum(matrix[parameters[0]])


def query_col(matrix, parameters):
    print sum(row[parameters[0]] for row in matrix)

matrix = [[0 for i in xrange(256)] for j in xrange(256)]

operations = {
    'SetRow'   : set_row,
    'SetCol'   : set_col,
    'QueryCol' : query_col,
    'QueryRow' : query_row
}

for test in test_cases:
    line = [int(i) if i.isdigit() else i for i in test.split()]
    operation, parameters = line[0], line[1:]
    operations.get(operation)(matrix, parameters)
